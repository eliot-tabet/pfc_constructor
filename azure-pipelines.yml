name: $(Date:yyyyMMdd)$(Rev:rr)
pool:
  vmImage: 'windows-2019'

trigger:
  batch: 'true'
  branches:
    include:
    - master

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      useGlobalJson: true

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'cmdty'
      scannerMode: 'MSBuild'
      projectKey: 'curves'
      projectName: 'curves'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
    displayName: "Use Python 3.6"

  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: '5.1.0'

  - script: |
        pip install virtualenv
        pip install twine
        pip install setuptools
        pip install wheel
    displayName: 'Install Python packages: virtualenv, twine, setuptools and wheel'

  - task: PowerShell@2
    displayName: 'Run Cake PowerShell Bootstrapper'
    inputs:
      filePath: 'build.ps1'
      arguments: '-Verbosity Diagnostic -PrereleaseNumber=$(Build.BuildNumber)'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)

  - task: SonarCloudAnalyze@1

  - task: PublishTestResults@2
    displayName: Publish Python test results
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: 'junit/test-results.xml'
      mergeTestResults: true
      testRunTitle: 'Python Unit Tests'

  - task: PublishTestResults@2
    displayName: 'Publish .NET test results'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*.trx'
      mergeTestResults: true
      testRunTitle: 'C# Unit Tests'

  - script: |
      dotnet tool install -g dotnet-reportgenerator-globaltool
      reportgenerator -reports:$(Build.SourcesDirectory)/tests/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:Cobertura
    condition: succeededOrFailed()
    displayName: 'Create Code coverage report'      

  - task: PublishCodeCoverageResults@1
    displayName: 'publish .NET coverage results'
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'

  - task: TwineAuthenticate@0
    inputs:
      artifactFeeds: 'cmdty'
    displayName: 'Twine Authenticate'

  - script: 'twine upload -r cmdty --config-file $(PYPIRC_PATH) src/Cmdty.Curves.Python/dist/**'
    displayName: 'Upload Python package to Azure Artifacts Cmdty Feed'

  - task: CopyFiles@2
    displayName: Copy Python package to Artifact Staging Directory
    inputs:
      Contents: src/Cmdty.Curves.Python/dist/**
      TargetFolder: $(Build.ArtifactStagingDirectory)
      cleanTargetFolder: true
      flattenFolders: true

  - task: CopyFiles@2
    displayName: Copy NuGet package to Artifact Staging Directory
    inputs:
      Contents: artifacts/**
      TargetFolder: $(Build.ArtifactStagingDirectory)
      flattenFolders: true

  - task: DotNetCoreCLI@2
    displayName: Publish NuGet package to cmdty feed
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '18c506cf-ff39-47d5-8884-0ea703f25523'
    
  - task: PublishBuildArtifacts@1
    displayName: 'publish artifacts'
    inputs:
      ArtifactName: 'drop'

